@PACKAGE_INIT@

set(websocketserver_DEPENDENCIES websocketbase httpserver)
set(websocketclient_DEPENDENCIES websocketbase httpclient)

set(express_DEPENDENCIES httpserver)

set(httpserver_DEPENDENCIES http)
set(httpclient_DEPENDENCIES http)

set(http_DEPENDENCIES net-ip)

set(net-ip_DEPENDENCIES stream-legacy stream-tls)
set(net-bt_DEPENDENCIES stream-legacy stream-tls)

set(stream-legacy_DEPENDENCIES stream)
set(stream-tls DEPENDENCIES stream)

set(stream_DEPENDENCIES io)

set(io_DEPENDENCIES utils logger core)

macro(LOAD_COMPONENT_WITH_DEPENDENCIES _comp)
    message("Loading component: " ${_comp})
    include("${CMAKE_CURRENT_LIST_DIR}/snodec${_comp}Options.cmake" OPTIONAL
            RESULT_VARIABLE ${_comp}_OPTIONS_FILE
    )
    if(NOT "${${_comp}_OPTIONS_FILE}" STREQUAL "NOTFOUND")
        message("  " ${_comp} ": Options loaded from " ${${_comp}_OPTIONS_FILE})
    endif()
    foreach(_depcomp ${${_comp}_DEPENDENCIES})
        if("${${_depcomp}_LOADED}" STREQUAL "")
            message("  " ${_comp} " depends on " ${_depcomp} " ... loading")
            load_component_with_dependencies(${_depcomp})
        else()
            message("  " ${_comp} " depends on " ${_depcomp}
                    " ... already loaded"
            )
        endif()
    endforeach()
    include("${CMAKE_CURRENT_LIST_DIR}/snodec${_comp}Targets.cmake")
    set(${_comp}_LOADED true)
endmacro()

set(_supported_components
    net
    stream-legacy
    stream-tls
    net-ip
    net-bt
    http
    httpserver
    httpclient
    express
    websocketserver
    websocketclient
)

set(snodec_FOUND True)
foreach(_comp ${snodec_FIND_COMPONENTS})
    if(NOT _comp IN_LIST _supported_components)
        set(snodec_FOUND False)
        set(snodec_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
    else()
        load_component_with_dependencies(${_comp})
    endif()
endforeach()
